{"version":3,"sources":["components/Form.js","components/Table/TableItem.js","components/Table/TableHeader.js","components/Table/index.js","utils/sortBy.js","index.js","mockData.js"],"names":["Form","handleSubmit","ev","preventDefault","name","refs","value","props","onAdd","target","reset","onSubmit","this","ref","placeholder","Component","TableItem","id","fav","toggleChecked","type","checked","onChange","className","TableHeader","onSort","columns","map","key","onClick","Table","state","sortBy","handleSort","setState","sortedItems","list","field","fieldName","replace","reversed","ret","sort","a","b","aF","bF","reverse","items","item","App","addTask","length","Promise","resolve","then","console","log","render","document","getElementById"],"mappings":"0PAqBeA,G,kNAlBbC,aAAe,SAACC,GACdA,EAAGC,iBACH,IAAIC,EAAO,EAAKC,KAAKD,KAAKE,MACvBF,IACD,EAAKG,MAAMC,MAAM,CACfJ,SAEFF,EAAGO,OAAOC,U,4CAGd,WACE,OAAQ,0BAAMC,SAAUC,KAAKX,cACzB,2BAAOY,IAAI,OAAOC,YAAY,4BAC9B,mD,GAdWC,cCSJC,EATG,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,IAAKd,EAAZ,EAAYA,KAAKe,EAAjB,EAAiBA,cAAjB,OAChB,4BACE,4BAAKF,GACL,4BAAI,2BAAOG,KAAK,WAAWC,QAASH,EAAKI,SAAU,kBAAMH,EAAcF,IAAKM,UAAU,UACtF,wBAAInB,KAAMA,GAAOA,KCiBNoB,EApBK,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAQC,EAAV,EAAUA,QAAV,OAClB,+BACE,4BACGA,EAAQC,KAAI,SAAAvB,GAAI,OACf,wBAAIwB,IAAKxB,GACRA,OAIL,4BACGsB,EAAQC,KAAI,SAAAvB,GAAI,OACf,wBAAIwB,IAAKxB,GACT,4BAAQyB,QAAS,kBAAMJ,EAAOrB,KAA9B,KAA+C,6BAC/C,4BAAQyB,QAAS,kBAAMJ,EAAO,IAAD,OAAKrB,MAAlC,YCVFsB,G,MAAU,CAAC,KAAM,MAAO,SA+BfI,E,4MA5BbC,MAAQ,CACNC,OAAQ,M,EAEVC,WAAa,SAACD,GACZ,EAAKE,SAAS,CAACF,Y,4CAEjB,WACE,IAAIb,EAAgBP,KAAKL,MAAMY,cAC3BgB,ECjBO,SAACC,EAAMC,GAClB,IAAIC,EAAYD,EAAME,QAAQ,IAAK,IAC/BC,EAAwB,MAAbH,EAAM,GACjBI,EAAML,EAAKM,MAAK,SAACC,EAAGC,GACtB,IAAIC,EAAKF,EAAEL,GACPQ,EAAKF,EAAEN,GACX,OAAOO,EAAKC,EAAK,EAAKD,IAAOC,EAAK,GAAK,KAGzC,OAAON,EAAWC,EAAIM,UAAYN,EDQhBT,CAChBpB,KAAKL,MAAMyC,MACXpC,KAAKmB,MAAMC,QAGb,OAAQ,+BACN,kBAAC,EAAD,CACEP,OAAQb,KAAKqB,WACbP,QAASA,IACX,+BAAQS,EAAYR,KAAI,SAACsB,GAAD,OACtB,kBAAC,EAAD,eACErB,IAAKqB,EAAKhC,IACNgC,EAFN,CAGE9B,cAAeA,c,GAtBLJ,aEDdmC,E,4MACJnB,MAAQ,CACNiB,MAAO,I,EAYTG,QAAU,YAAa,IAAX/C,EAAU,EAAVA,KACV,EAAK8B,SAAS,CACZc,MAAM,CAAE,CACN/B,GAAI,EAAKc,MAAMiB,MAAMI,OAAS,EAC9BhD,OACAc,IAAI,IAHD,mBAIC,EAAKa,MAAMiB,W,EAIrB7B,cAAgB,SAACF,GACf,EAAKiB,SAAS,CACZc,MAAO,EAAKjB,MAAMiB,MAAMrB,KAAI,SAACsB,GAAD,OAAWA,EAAKhC,KAAOA,EAAOgC,EAApB,YAAC,eAChCA,GAD+B,IAElC/B,KAAM+B,EAAK/B,Y,uDAvBnB,WAAoB,IAAD,OCZSmC,QAAQC,QAClC,CAAC,CACGrC,GAAI,EACJC,IAAK,EACLd,KAAK,UAGP,CACEa,GAAI,EACJC,IAAK,EACLd,KAAK,UAGP,CACEa,GAAI,EACJC,IAAK,EACLd,KAAK,UAGP,CACEa,GAAI,EACJC,IAAK,EACLd,KAAK,YDTEmD,MAAK,SAACP,GACfQ,QAAQC,IAAIT,GACZ,EAAKd,SAAS,CACZc,e,oBAyBN,WACE,OACE,4CAEE,kBAAC,EAAD,CAAMxC,MAAOI,KAAKuC,UAClB,kBAAC,EAAD,CAAOH,MAAOpC,KAAKmB,MAAMiB,MAAO7B,cAAeP,KAAKO,qB,GAvC1CJ,aA6ClB2C,iBAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d596274c.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass Form extends Component  {\r\n  handleSubmit = (ev) => {\r\n    ev.preventDefault();\r\n    let name = this.refs.name.value;\r\n    if(name) {\r\n      this.props.onAdd({\r\n        name\r\n      });\r\n      ev.target.reset();\r\n    }\r\n  }\r\n  render() {\r\n    return (<form onSubmit={this.handleSubmit}>\r\n        <input ref=\"name\" placeholder=\"Enter Your Friends Name\" />\r\n        <button>Add Friend</button>\r\n    </form>);\r\n  }\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst TableItem = ( {id, fav, name,toggleChecked}) => (\r\n  <tr>\r\n    <td>{id}</td>\r\n    <td><input type=\"checkbox\" checked={fav} onChange={() => toggleChecked(id)} className=\"star\"/></td>\r\n    <td name={name}>{name}</td>\r\n  \r\n  </tr>\r\n)\r\n\r\nexport default TableItem;","\r\nimport React from 'react';\r\n\r\nconst TableHeader = ({onSort, columns}) => (\r\n  <thead>\r\n    <tr>\r\n      {columns.map(name => (\r\n        <th key={name}>\r\n        {name}\r\n        </th>\r\n      ))}\r\n    </tr>\r\n    <tr>\r\n      {columns.map(name => (\r\n        <th key={name}>\r\n        <button onClick={() => onSort(name)}>^</button><br />\r\n        <button onClick={() => onSort(`-${name}`)}>v</button>\r\n        </th>\r\n      ))}\r\n    </tr>\r\n  </thead>\r\n);\r\n\r\nexport default TableHeader;","import React, {Component} from 'react';\r\nimport TableItem from './TableItem';\r\nimport TableHeader from './TableHeader';\r\nimport sortBy from '../../utils/sortBy';\r\nimport './Table.css';\r\n\r\nconst columns = ['id', 'fav', 'name'];\r\n\r\nclass Table extends Component  {\r\n  state = {\r\n    sortBy: 'id',\r\n  }\r\n  handleSort = (sortBy) => {\r\n    this.setState({sortBy});\r\n  }\r\n  render() {\r\n    let toggleChecked = this.props.toggleChecked;\r\n    let sortedItems = sortBy(\r\n      this.props.items,\r\n      this.state.sortBy\r\n    );\r\n\r\n    return (<table>\r\n      <TableHeader \r\n        onSort={this.handleSort} \r\n        columns={columns} />\r\n      <tbody>{sortedItems.map((item) => (\r\n        <TableItem \r\n          key={item.id} \r\n          {...item} \r\n          toggleChecked={toggleChecked} />)\r\n        )}</tbody>\r\n     \r\n    </table>);\r\n  }\r\n}\r\n\r\nexport default Table;","export default (list, field) => {\r\n    let fieldName = field.replace('-', '');\r\n    let reversed = field[0] === '-';\r\n    let ret = list.sort((a, b) => {\r\n      let aF = a[fieldName];\r\n      let bF = b[fieldName];\r\n      return aF > bF ? 1 : (aF === bF ? 0 : -1);\r\n    });\r\n  \r\n    return reversed ? ret.reverse() : ret;\r\n  };","import React, { Component } from 'react';\r\nimport { render } from 'react-dom';\r\nimport './style.css';\r\nimport Form from './components/Form';\r\nimport Table from './components/Table';\r\nimport { getItems } from './mockData';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    items: []\r\n  }\r\n\r\n  componentDidMount(){\r\n    getItems().then((items) => {\r\n      console.log(items);\r\n      this.setState({\r\n        items\r\n      });\r\n    });\r\n  }\r\n\r\n  addTask = ({name}) => {\r\n    this.setState({\r\n      items: [{\r\n        id: this.state.items.length + 1,\r\n        name,\r\n        fav:0,\r\n      }, ...this.state.items]\r\n    });\r\n  }\r\n\r\n  toggleChecked = (id) => {\r\n    this.setState({\r\n      items: this.state.items.map((item) => (item.id !== id ) ? item : {\r\n          ...item,\r\n          fav: !item.fav\r\n        }\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        Friends List\r\n        <Form onAdd={this.addTask}/>\r\n        <Table items={this.state.items} toggleChecked={this.toggleChecked}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<App />, document.getElementById('root'));\r\n","export const getItems = () => Promise.resolve(\r\n    [{\r\n        id: 1,\r\n        fav: 1, \r\n        name: `Sachin`\r\n       \r\n      },\r\n      {\r\n        id: 2,\r\n        fav: 0, \r\n        name: `Sanket` \r\n       \r\n      },\r\n      {\r\n        id: 3,\r\n        fav: 0, \r\n        name: `Gaurav`\r\n       \r\n      },\r\n      {\r\n        id: 4,\r\n        fav: 1, \r\n        name: `Pranav`\r\n       \r\n      }\r\n    ]);"],"sourceRoot":""}